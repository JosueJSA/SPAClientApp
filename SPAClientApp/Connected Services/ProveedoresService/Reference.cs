//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPAClientApp.ProveedoresService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EProveedor", Namespace="http://schemas.datacontract.org/2004/07/Services.Model")]
    [System.SerializableAttribute()]
    public partial class EProveedor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoriaInsumoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionEmpresaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RfcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoriaInsumo {
            get {
                return this.CategoriaInsumoField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriaInsumoField, value) != true)) {
                    this.CategoriaInsumoField = value;
                    this.RaisePropertyChanged("CategoriaInsumo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clave {
            get {
                return this.ClaveField;
            }
            set {
                if ((this.ClaveField.Equals(value) != true)) {
                    this.ClaveField = value;
                    this.RaisePropertyChanged("Clave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DireccionEmpresa {
            get {
                return this.DireccionEmpresaField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionEmpresaField, value) != true)) {
                    this.DireccionEmpresaField = value;
                    this.RaisePropertyChanged("DireccionEmpresa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rfc {
            get {
                return this.RfcField;
            }
            set {
                if ((object.ReferenceEquals(this.RfcField, value) != true)) {
                    this.RfcField = value;
                    this.RaisePropertyChanged("Rfc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerMessage", Namespace="http://schemas.datacontract.org/2004/07/Services.Model")]
    [System.SerializableAttribute()]
    public partial class AnswerMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProveedoresService.IProveedoresService")]
    public interface IProveedoresService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/GetProveedor", ReplyAction="http://tempuri.org/IProveedoresService/GetProveedorResponse")]
        SPAClientApp.ProveedoresService.EProveedor GetProveedor(int IDProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/GetProveedor", ReplyAction="http://tempuri.org/IProveedoresService/GetProveedorResponse")]
        System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.EProveedor> GetProveedorAsync(int IDProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/GetProveedoresList", ReplyAction="http://tempuri.org/IProveedoresService/GetProveedoresListResponse")]
        SPAClientApp.ProveedoresService.EProveedor[] GetProveedoresList(string criterio, string valor, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/GetProveedoresList", ReplyAction="http://tempuri.org/IProveedoresService/GetProveedoresListResponse")]
        System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.EProveedor[]> GetProveedoresListAsync(string criterio, string valor, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/AddProveedor", ReplyAction="http://tempuri.org/IProveedoresService/AddProveedorResponse")]
        SPAClientApp.ProveedoresService.AnswerMessage AddProveedor(SPAClientApp.ProveedoresService.EProveedor proveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/AddProveedor", ReplyAction="http://tempuri.org/IProveedoresService/AddProveedorResponse")]
        System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.AnswerMessage> AddProveedorAsync(SPAClientApp.ProveedoresService.EProveedor proveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/UpdateProveedor", ReplyAction="http://tempuri.org/IProveedoresService/UpdateProveedorResponse")]
        SPAClientApp.ProveedoresService.AnswerMessage UpdateProveedor(int oldClave, SPAClientApp.ProveedoresService.EProveedor proveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/UpdateProveedor", ReplyAction="http://tempuri.org/IProveedoresService/UpdateProveedorResponse")]
        System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.AnswerMessage> UpdateProveedorAsync(int oldClave, SPAClientApp.ProveedoresService.EProveedor proveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/ChangeProveedorStatus", ReplyAction="http://tempuri.org/IProveedoresService/ChangeProveedorStatusResponse")]
        SPAClientApp.ProveedoresService.AnswerMessage ChangeProveedorStatus(int idProveedor, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProveedoresService/ChangeProveedorStatus", ReplyAction="http://tempuri.org/IProveedoresService/ChangeProveedorStatusResponse")]
        System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.AnswerMessage> ChangeProveedorStatusAsync(int idProveedor, string status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProveedoresServiceChannel : SPAClientApp.ProveedoresService.IProveedoresService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProveedoresServiceClient : System.ServiceModel.ClientBase<SPAClientApp.ProveedoresService.IProveedoresService>, SPAClientApp.ProveedoresService.IProveedoresService {
        
        public ProveedoresServiceClient() {
        }
        
        public ProveedoresServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProveedoresServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProveedoresServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProveedoresServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SPAClientApp.ProveedoresService.EProveedor GetProveedor(int IDProveedor) {
            return base.Channel.GetProveedor(IDProveedor);
        }
        
        public System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.EProveedor> GetProveedorAsync(int IDProveedor) {
            return base.Channel.GetProveedorAsync(IDProveedor);
        }
        
        public SPAClientApp.ProveedoresService.EProveedor[] GetProveedoresList(string criterio, string valor, string status) {
            return base.Channel.GetProveedoresList(criterio, valor, status);
        }
        
        public System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.EProveedor[]> GetProveedoresListAsync(string criterio, string valor, string status) {
            return base.Channel.GetProveedoresListAsync(criterio, valor, status);
        }
        
        public SPAClientApp.ProveedoresService.AnswerMessage AddProveedor(SPAClientApp.ProveedoresService.EProveedor proveedor) {
            return base.Channel.AddProveedor(proveedor);
        }
        
        public System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.AnswerMessage> AddProveedorAsync(SPAClientApp.ProveedoresService.EProveedor proveedor) {
            return base.Channel.AddProveedorAsync(proveedor);
        }
        
        public SPAClientApp.ProveedoresService.AnswerMessage UpdateProveedor(int oldClave, SPAClientApp.ProveedoresService.EProveedor proveedor) {
            return base.Channel.UpdateProveedor(oldClave, proveedor);
        }
        
        public System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.AnswerMessage> UpdateProveedorAsync(int oldClave, SPAClientApp.ProveedoresService.EProveedor proveedor) {
            return base.Channel.UpdateProveedorAsync(oldClave, proveedor);
        }
        
        public SPAClientApp.ProveedoresService.AnswerMessage ChangeProveedorStatus(int idProveedor, string status) {
            return base.Channel.ChangeProveedorStatus(idProveedor, status);
        }
        
        public System.Threading.Tasks.Task<SPAClientApp.ProveedoresService.AnswerMessage> ChangeProveedorStatusAsync(int idProveedor, string status) {
            return base.Channel.ChangeProveedorStatusAsync(idProveedor, status);
        }
    }
}
